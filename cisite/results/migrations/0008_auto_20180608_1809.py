# Generated by Django 2.0.6 on 2018-06-08 18:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


def add_profiles_for_all_users(apps, schema_editor):
    """Add a profile for each user in the system."""
    User = apps.get_model("auth", "User")
    UserProfile = apps.get_model("results", "UserProfile")
    db_alias = schema_editor.connection.alias
    for user in User.objects.using(db_alias).exclude(username='AnonymousUser').iterator():
        UserProfile.objects.create(user=user)


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('results', '0007_branch'),
    ]

    operations = [
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_success', models.NullBooleanField(help_text='Send e-mails when test succeeds; if null/unknown, then inherit the global setting from the environment.')),
                ('how', models.CharField(choices=[('to', 'To'), ('cc', 'Cc')], default='to', help_text='Which e-mail header to include contact in', max_length=4)),
                ('environment', models.ForeignKey(help_text='The environment that the user is subscribing to.', on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='results.Environment')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscriptions', models.ManyToManyField(help_text='The set of environments for which this user receives e-mail notifications.', through='results.Subscription', to='results.Environment')),
                ('user', models.OneToOneField(help_text='The user that this profile corresponds to.', on_delete=django.db.models.deletion.CASCADE, related_name='results_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='subscription',
            name='user_profile',
            field=models.ForeignKey(help_text='The user that is being subscribed.', on_delete=django.db.models.deletion.CASCADE, to='results.UserProfile'),
        ),
        migrations.RunPython(add_profiles_for_all_users, migrations.RunPython.noop),
    ]
