# Generated by Django 2.0.6 on 2018-07-13 14:44

from django.db import migrations, models


def copy_dtscodename(apps, schema_editor):
    """Set the nic_dtscodename to a copy of the nic_model field."""
    Environment = apps.get_model("results", "Environment")
    db_alias = schema_editor.connection.alias
    for env in Environment.objects.using(db_alias).iterator():
        env.nic_dtscodename = env.nic_model
        env.save()


def copyback_dtscodename(apps, schema_editor):
    """Set the nic_model field back to its previous value."""
    Environment = apps.get_model("results", "Environment")
    db_alias = schema_editor.connection.alias
    for env in Environment.objects.using(db_alias).iterator():
        env.nic_model = env.nic_dtscodename
        env.save()


class Migration(migrations.Migration):

    dependencies = [
        ('results', '0010_auto_20180711_1538'),
    ]

    operations = [
        migrations.AddField(
            model_name='environment',
            name='nic_dtscodename',
            field=models.CharField(blank=True, help_text='Codename of NIC under test as defined by DTS', max_length=64),
        ),
        migrations.AlterField(
            model_name='environment',
            name='nic_model',
            field=models.CharField(help_text='Official model name of NIC under test', max_length=64),
        ),
        migrations.RunPython(copy_dtscodename, migrations.RunPython.noop),
    ]
