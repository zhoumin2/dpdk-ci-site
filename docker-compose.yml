version: '3.4'

services:

##
# Building
##

  # Build dev image
  cisite_dev:
    build:
      context: .
      target: dev
    image: cisite_dev

  # Build prod image
  cisite_prod:
    build:
      context: .
      target: prod
    image: cisite_prod

##
# Production
##

  # Build prod
  build:
    image: cisite_prod
    command: >
      sh -c "./manage.py migrate --database default --noinput &&
             ./manage.py migrate --database public --noinput &&
             ./manage.py collectstatic --noinput &&
             npm --prefix .. install &&
             npm --prefix .. run build"
    volumes:
      # Generate static files and migrate
      - .:/workspace
    environment:
      - MYSQL_HOST=mariadb
      - MYSQL_CISITE_PASSWORD
      - MYSQL_CISITE_PUBLIC_PASSWORD
    depends_on:
      - cisite_prod
      - mariadb

  mariadb:
    image: mariadb
    restart: always
    volumes:
      # Initialization scripts
      - ./config/db/init:/docker-entrypoint-initdb.d
      # Persistent database location
      - "${DATABASE_DIRECTORY}:/var/lib/mysql"
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_CISITE_PASSWORD
      - MYSQL_CISITE_PUBLIC_PASSWORD

  redis:
    image: redis
    restart: always

  memcached:
    image: memcached
    restart: always

  daphne:
    image: cisite_prod
    command: "daphne -b 0 cisite.asgi:application"
    environment:
      - REDIS_HOST=redis
      - MEMCACHED_HOST=memcached
      - MYSQL_HOST=mariadb
      - MYSQL_CISITE_PASSWORD
      - MYSQL_CISITE_PUBLIC_PASSWORD
    volumes:
      # Point to the root of the app for daphne
      - .:/workspace
    depends_on:
      - build
      - redis
      - memcached

  production:
    image: nginx
    volumes:
      # Nginx static file serving
      - ./cisite:/workspace
      # Nginx config
      - ./config/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf:ro
    ports:
      - "8000:8000"
    depends_on:
      - daphne

##
# Development
##

  # Migrate dev
  dev_migrate:
    image: cisite_dev
    command: ./manage.py migrate --noinput
    volumes:
      - .:/workspace
    depends_on:
      - cisite_dev

  # Build dev
  dev_build:
    image: cisite_dev
    command: >
      sh -c "npm --prefix .. install &&
             npm --prefix .. run build"
    volumes:
      - .:/workspace
    depends_on:
      - cisite_dev

  # Run dev server
  dev:
    image: cisite_dev
    command: >
      sh -c "npm --prefix .. run dev &
             ./manage.py livereload --host 0 &
             ./manage.py runserver 0:8000"
    volumes:
      - .:/workspace
    environment:
      - REDIS_HOST=redis
    ports:
      - "8000:8000"
      - "35729:35729"
    depends_on:
      - cisite_dev
      - redis

##
# Testing
##

  # Migrate test (for dev and CI)
  test_migrate:
    image: cisite_dev
    command: ./manage.py migrate --noinput --settings cisite.settings_test
    volumes:
      - .:/workspace
    depends_on:
      - cisite_dev

  # Test the style (for dev and CI)
  test_style:
    image: cisite_dev
    command: pre-commit run --all-files
    volumes:
      - .:/workspace
    depends_on:
      - cisite_dev

  # Run tests (for dev and CI)
  test:
    image: cisite_dev
    command:
      ./manage.py test --noinput --settings cisite.settings_test
    volumes:
      - .:/workspace
    depends_on:
      - cisite_dev

  # Run tests with coverage (for dev and CI, but mostly for CI)
  test_coverage:
    image: cisite_dev
    command: >
      sh -c "coverage run ./manage.py test --noinput --settings cisite.settings_test --testrunner xmlrunner.extra.djangotestrunner.XMLTestRunner &&
             coverage html --include=results/\*.py --omit=results/migrations/\*.py"
    volumes:
      - .:/workspace
    depends_on:
      - cisite_dev
