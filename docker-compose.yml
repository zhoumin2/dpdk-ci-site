version: '3.4'

services:

##
# Building
##

  # Build dev image
  cisite_dev:
    build:
      context: .
      target: dev
    image: cisite_dev

  # Build prod image
  cisite_prod:
    build:
      context: .
      target: prod
    image: cisite_prod

##
# Development
##

  # Migrate dev
  dev_migrate:
    image: cisite_dev
    entrypoint: pipenv run ./manage.py migrate --noinput
    volumes:
      - ./cisite/cisite:/workspace/cisite/cisite
      - ./cisite/dashboard:/workspace/cisite/dashboard
      - ./cisite/results:/workspace/cisite/results
      - ./cisite/shared:/workspace/cisite/shared
    depends_on:
      - cisite_dev

  # Run dev server
  dev:
    image: cisite_dev
    entrypoint: >
      sh -c "npm --prefix .. run dev &
             pipenv run ./manage.py livereload --host 0 &
             pipenv run ./manage.py runserver 0:8000"
    ports:
      - "8000:8000"
      - "35729:35729"
    volumes:
      - ./cisite/cisite:/workspace/cisite/cisite
      - ./cisite/dashboard:/workspace/cisite/dashboard
      - ./cisite/results:/workspace/cisite/results
      - ./cisite/shared:/workspace/cisite/shared
    depends_on:
      - cisite_dev

##
# Testing
##

  # Migrate test (for dev and CI)
  test_migrate:
    image: cisite_dev
    entrypoint: pipenv run ./manage.py migrate --noinput --settings cisite.settings_test
    depends_on:
      - cisite_dev

  # Test the style (for dev and CI)
  test_style:
    image: cisite_dev
    entrypoint: >
      sh -c "pipenv run pre-commit run --all-files &&
             npm --prefix .. run lint"
    depends_on:
      - cisite_dev

  # Run tests (for dev and CI)
  test:
    image: cisite_dev
    entrypoint:
      pipenv run ./manage.py test --noinput --settings cisite.settings_test
    depends_on:
      - cisite_dev

  # Run tests with coverage (for dev and CI, but mostly for CI)
  test_coverage:
    image: cisite_dev
    entrypoint: >
      sh -c "pipenv run coverage run ./manage.py test --noinput --settings cisite.settings_test --testrunner xmlrunner.extra.djangotestrunner.XMLTestRunner &&
             pipenv run coverage html --include=results/\*.py --omit=results/migrations/\*.py -d coverage &&
             pipenv run coverage xml --include=results/\*.py --omit=results/migrations/\*.py -o coverage/coverage.xml"
    volumes:
      - ./cisite/coverage:/workspace/cisite/coverage
    depends_on:
      - cisite_dev
